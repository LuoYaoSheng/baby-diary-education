// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ToolsGenTableColumnDao is the manager for logic model data accessing and custom defined data operations functions management.
type ToolsGenTableColumnDao struct {
	gmvc.M                            // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C      toolsGenTableColumnColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.
	DB     gdb.DB                     // DB is the raw underlying database management object.
	Table  string                     // Table is the underlying table name of the DAO.
}

// ToolsGenTableColumnColumns defines and stores column names for table tools_gen_table_column.
type toolsGenTableColumnColumns struct {
	ColumnId              string // 编号
	TableId               string // 归属表编号
	ColumnName            string // 列名称
	ColumnComment         string // 列描述
	ColumnType            string // 列类型
	GoType                string // Go类型
	GoField               string // Go字段名
	HtmlField             string // html字段名
	IsPk                  string // 是否主键
	IsIncrement           string // 是否自增
	IsRequired            string // 是否必填
	IsInsert              string // 是否为插入字段
	IsEdit                string // 是否编辑字段
	IsList                string // 是否列表字段
	IsDetail              string // 是否详情字段
	IsQuery               string // 是否查询字段
	IsStatus              string // 是否状态字段
	SortOrderEdit         string // 插入编辑显示顺序
	SortOrderList         string // 列表显示顺序
	SortOrderDetail       string // 详情显示顺序
	SortOrderQuery        string // 查询显示顺序
	QueryType             string // 查询方式（等于、不等于、大于、小于、范围）
	HtmlType              string // 显示类型（文本框、文本域、下拉框、复选框、单选框、日期控件）
	DictType              string // 字典类型
	LinkTableName         string // 关联表名
	LinkTableClass        string // 关联表类名
	LinkTableModuleName   string // 关联表模块名
	LinkTableBusinessName string // 关联表业务名
	LinkTablePackage      string // 关联表包名
	LinkLabelId           string // 关联表键名
	LinkLabelName         string // 关联表字段值
	ColSpan               string // 占多少列
	RowSpan               string // 占多少行
	IsRowStart            string // 是否另起一行
	MinWidth              string // 表格最小宽度
	IsFixed               string // 是否表格列左固定
	IsOverflowTooltip     string // 是否过长自动隐藏
	IsCascade             string // 是否级联查询
	ParentColumnName      string // 上级字段名
	CascadeColumnName     string // 级联查询字段
}

// NewToolsGenTableColumnDao creates and returns a new DAO object for table data access.
func NewToolsGenTableColumnDao() *ToolsGenTableColumnDao {
	columns := toolsGenTableColumnColumns{
		ColumnId:              "column_id",
		TableId:               "table_id",
		ColumnName:            "column_name",
		ColumnComment:         "column_comment",
		ColumnType:            "column_type",
		GoType:                "go_type",
		GoField:               "go_field",
		HtmlField:             "html_field",
		IsPk:                  "is_pk",
		IsIncrement:           "is_increment",
		IsRequired:            "is_required",
		IsInsert:              "is_insert",
		IsEdit:                "is_edit",
		IsList:                "is_list",
		IsDetail:              "is_detail",
		IsQuery:               "is_query",
		IsStatus:              "is_status",
		SortOrderEdit:         "sort_order_edit",
		SortOrderList:         "sort_order_list",
		SortOrderDetail:       "sort_order_detail",
		SortOrderQuery:        "sort_order_query",
		QueryType:             "query_type",
		HtmlType:              "html_type",
		DictType:              "dict_type",
		LinkTableName:         "link_table_name",
		LinkTableClass:        "link_table_class",
		LinkTableModuleName:   "link_table_module_name",
		LinkTableBusinessName: "link_table_business_name",
		LinkTablePackage:      "link_table_package",
		LinkLabelId:           "link_label_id",
		LinkLabelName:         "link_label_name",
		ColSpan:               "col_span",
		RowSpan:               "row_span",
		IsRowStart:            "is_row_start",
		MinWidth:              "min_width",
		IsFixed:               "is_fixed",
		IsOverflowTooltip:     "is_overflow_tooltip",
		IsCascade:             "is_cascade",
		ParentColumnName:      "parent_column_name",
		CascadeColumnName:     "cascade_column_name",
	}
	return &ToolsGenTableColumnDao{
		C:     columns,
		M:     g.DB("default").Model("tools_gen_table_column").Safe(),
		DB:    g.DB("default"),
		Table: "tools_gen_table_column",
	}
}
